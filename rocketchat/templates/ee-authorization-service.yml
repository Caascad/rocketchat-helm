{{- if .Values.microservices }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    DeploymentName: authorization-service
  name: authorization-service
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      DeploymentName: authorization-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      # annotations:
      #   prometheus.io/path: '/metrics'
      #   prometheus.io/scrape: 'true'
      #   prometheus.io/port: '9100'
      labels:
        DeploymentName: authorization-service
    spec:
      containers:
      - name: authorization-service
        image: rocketchat/authorization-service:3.17.0
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-oplog-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-oplog-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
        - name: SKIP_PROCESS_EVENT_REGISTRATION
          value: 'false'
        # - name: BALANCE_STRATEGY
        #   value: CpuUsage
        # imagePullPolicy: Always
      tolerations:
        - key: node-type
          operator: Equal
          value: app
          effect: NoSchedule
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: authorization-service
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "9458"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
    DeploymentName: authorization-service
{{end}}
