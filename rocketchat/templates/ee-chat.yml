# {{- if .Values.microservices.enabled }}
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: {{ include "rocketchat.name" . }}
#     app.kubernetes.io/name: {{ include "rocketchat.name" . }}
#   name: {{ template "rocketchat.fullname" . }}
# spec:
#   replicas: 1
#   revisionHistoryLimit: 0
#   selector:
#     matchLabels:
#       app: rocketchat
#   # strategy:
#   #   rollingUpdate:
#   #     maxSurge: 1
#   #     maxUnavailable: 0
#   #   type: RollingUpdate
#   template:
#     metadata:
#       labels:
#         app: rocketchat
#     spec:
#       tolerations:
#         - key: node-type
#           operator: Equal
#           value: app
#           effect: NoSchedule
#       containers:
#       - env:
#         - name: INSTANCE_IP
#           valueFrom:
#             fieldRef:
#               apiVersion: v1
#               fieldPath: status.podIP
#         - name: ROOT_URL
#           value: https://{{ .Values.host }}
#         {{- if .Values.existingMongodbSecret }}
#         - name: MONGO_URL
#           valueFrom:
#             secretKeyRef:
#               name: {{ .Values.existingMongodbSecret }}
#               key: mongo-uri
#         - name: MONGO_OPLOG_URL
#           valueFrom:
#             secretKeyRef:
#               name: {{ .Values.existingMongodbSecret }}
#               key: mongo-oplog-uri
#         {{- else }}
#         - name: MONGO_URL
#           valueFrom:
#             secretKeyRef:
#               name: {{ template "rocketchat.fullname" . }}
#               key: mongo-uri
#         - name: MONGO_OPLOG_URL
#           valueFrom:
#             secretKeyRef:
#               name: {{ template "rocketchat.fullname" . }}
#               key: mongo-oplog-uri
#         {{- end }}
#         - name: OVERWRITE_SETTING_Prometheus_Port
#           value: "9100"
#         - name: OVERWRITE_SETTING_Prometheus_Enabled
#           value: "true"
#         - name: DISABLE_DB_WATCH
#           value: "true"
#         - name: DISABLE_PRESENCE_MONITOR
#           value: "true"
#         - name: TRANSPORTER
#           value: nats://nats:4222
#         - name: MOLECULER_LOG_LEVEL
#           value: info
#         - name: HEARTBEAT_INTERVAL
#           value: '10'
#         - name: HEARTBEAT_TIMEOUT
#           value: '30'
#         - name: RETRY_ENABLED
#           value: 'yes'
#         - name: MS_METRICS
#           value: 'true'
#         - name: SERVICES_ALLOWED
#           value: 'banner,media,meteor,nps,room,team,uikit-core-app,authorization-livechat,search,authorization-tokenpass,license,ee-settings'
#         # - name: INTERNAL_SERVICES_ONLY
#         #   value: "true"
#         - name: SKIP_PROCESS_EVENT_REGISTRATION
#           value: "false"
#         image: registry.rocket.chat/rocket.chat:3.17.0
#         #imagePullPolicy: Always
#         name: chat
#         ports:
#         - containerPort: 3000
#           protocol: TCP
#         livenessProbe:
#           failureThreshold: 10
#           httpGet:
#             path: /api/info
#             port: 3000
#             scheme: HTTP
#           initialDelaySeconds: 30
#           periodSeconds: 15
#           successThreshold: 1
#           timeoutSeconds: 10
#         readinessProbe:
#           failureThreshold: 10
#           httpGet:
#             path: /api/info
#             port: 3000
#             scheme: HTTP
#           initialDelaySeconds: 10
#           periodSeconds: 10
#           successThreshold: 1
#           timeoutSeconds: 5
#         resources:
#           requests:
#             memory: 200Mi
#       restartPolicy: Always

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     prometheus.io/path: /metrics
#     prometheus.io/port: "9100"
#     prometheus.io/scrape: "true"
#     traefik.backend.circuitbreaker: NetworkErrorRatio() > 0.5
#     traefik.backend.loadbalancer.method: drr
#     traefik.ingress.kubernetes.io/affinity: "true"
#   labels:
#     app: rocketchat
#   name: {{ template "rocketchat.fullname" . }}
# spec:
#   ports:
#   - name: http
#     port: 3000
#     protocol: TCP
#     targetPort: 3000
#   selector:
#     app: rocketchat
#   sessionAffinity: None
#   type: ClusterIP

# ---

# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   annotations:
#     # add an annotation indicating the issuer to use.
#     cert-manager.io/cluster-issuer: production-cert-issuer
#   name: chat-route
# spec:
#   entryPoints:
#     - web
#     - websecure
#   routes:
#   - match: Host(`{{ .Values.host }}`)
#     kind: Rule
#     services:
#     - name: {{ template "rocketchat.fullname" . }}
#       port: 3000
#       sticky:
#         cookie:
#           httpOnly: true
#           name: cookie
#           secure: true
#           sameSite: none
#       strategy: RoundRobin
#       weight: 10
#   tls:
#     secretName: bench-rocket-chat-tls
# {{end}}
