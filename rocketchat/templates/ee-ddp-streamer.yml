{{- if .Values.microservices }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    DeploymentName: ddp-streamer
  name: ddp-streamer
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      DeploymentName: ddp-streamer
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      # annotations:
      #   prometheus.io/path: '/metrics'
      #   prometheus.io/scrape: 'true'
      #   prometheus.io/port: '9100'
      labels:
        DeploymentName: ddp-streamer
    spec:
      containers:
      - name: ddp-streamer
        image: rocketchat/ddp-streamer-service:3.17.0
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-oplog-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-oplog-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: PORT
          value: '3000'
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
        - name: SKIP_PROCESS_EVENT_REGISTRATION
          value: 'false'
        # - name: BALANCE_STRATEGY
        #   value: CpuUsage
        # imagePullPolicy: Always
      tolerations:
        - key: node-type
          operator: Equal
          value: app
          effect: NoSchedule
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: ddp-streamer
  annotations:
    traefik.backend.circuitbreaker: NetworkErrorRatio() > 0.5
    traefik.backend.loadbalancer.method: drr
    traefik.ingress.kubernetes.io/affinity: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "9458"
    prometheus.io/scrape: "true"
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http
    targetPort: 3000
    port: 3000
    protocol: TCP
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
    DeploymentName: ddp-streamer

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: production-cert-issuer
  name: ddp-streamer-route
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`{{ .Values.host }}`) && (PathPrefix(`/sockjs`) || PathPrefix(`/websocket`))
    kind: Rule
    services:
    - name: ddp-streamer
      port: 3000
      sticky:
        cookie:
          httpOnly: true
          name: cookie
          secure: true
          sameSite: none
      strategy: RoundRobin
      weight: 10
#  tls:
#    secretName: bench-rocket-chat-tls
{{end}}
