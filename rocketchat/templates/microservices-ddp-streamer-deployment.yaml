{{- if .Values.microservices.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ddp-streamer
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
      {{- toYaml .Values.deploymentLabels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.microservices.ddpStreamer.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-ddp-streamer
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-ddp-streamer
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: ddp-streamer
        image: rocketchat/ddp-streamer-service:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://{{ .Release.Name }}-nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: {{ .Values.microservices.logLevel | quote }}
        - name: PORT
          value: '3000'
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: {{ .Values.prometheusScraping.enabled | default "false" | quote }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
{{- end }}
