# #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# # ROCKET.CHAT TECHNOLOGY CORP. - Microservices K8s Manifests          #
# # Diego Sampaio - Created (circa August 2021) / Priv. Repo            #
# # Pedro T. R. Pinheiro - Adapted for Helm templ. system (Jan/2021)    #
# #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

# {{- if .Values.microservices.enabled }}
# {{- $service := .Values.service -}}


# # # # # # # # # # # # # #
# # NATS Stateful Set     #
# # # # # # # # # # # # # #
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: nats-config
# data:
#   nats.conf: |
#     pid_file: "/var/run/nats/nats.pid"
#     http: 8222
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: {{ .Release.Name }}-nats
#   labels:
#     app.kubernetes.io/name: {{ include "rocketchat.name" . }}
#     helm.sh/chart: {{ include "rocketchat.chart" . }}
#     app.kubernetes.io/instance: {{ .Release.Name }}
#     app.kubernetes.io/managed-by: {{ .Release.Service }}
#   annotations:
#     prometheus.io/path: '/metrics'
#     prometheus.io/scrape: 'true'
#     prometheus.io/port: '7777'
# spec:
#   selector:
#     app.kubernetes.io/name: {{ .Release.Name }}-nats
#     app.kubernetes.io/instance: {{ .Release.Name }}
#   clusterIP: None
#   ports:
#   - name: client
#     port: 4222
#   - name: cluster
#     port: 6222
#   - name: monitor
#     port: 8222
#   - name: metrics
#     port: 7777
#   - name: leafnodes
#     port: 7422
#   - name: gateways
#     port: 7522
# ---
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: {{ .Release.Name }}-nats
#   labels:
#     app.kubernetes.io/name: {{ include "rocketchat.name" . }}
#     helm.sh/chart: {{ include "rocketchat.chart" . }}
#     app.kubernetes.io/instance: {{ .Release.Name }}
#     app.kubernetes.io/managed-by: {{ .Release.Service }}
#   annotations:
#     prometheus.io/path: '/metrics'
#     prometheus.io/scrape: 'true'
#     prometheus.io/port: '7777'
# spec:
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: {{ .Release.Name }}-nats
#       app.kubernetes.io/instance: {{ .Release.Name }}
#   replicas: {{ .Values.microservices.nats.replicas }}
#   serviceName: "nats"
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: {{ .Release.Name }}-nats
#         app.kubernetes.io/instance: {{ .Release.Name }}
#     spec:
#       # Common volumes for the containers
#       volumes:
#       - name: config-volume
#         configMap:
#           name: nats-config
#       - name: pid
#         emptyDir: {}

#       # Required to be able to HUP signal and apply config reload
#       # to the server without restarting the pod.
#       shareProcessNamespace: true

#       #################
#       #               #
#       #  NATS Server  #
#       #               #
#       #################
#       terminationGracePeriodSeconds: 60
#       containers:
#       - name: nats-exporter
#         image: natsio/prometheus-nats-exporter:0.9.1
#         ports:
#         - containerPort: 7777
#           name: metrics
#         args:
#         - -connz
#         - -routez
#         - -subz
#         - -varz
#         - -use_internal_server_id
#         - http://localhost:8222/
#       - name: nats
#         image: nats:2.4.0-alpine
#         ports:
#         - containerPort: 4222
#           name: client
#           hostPort: 4222
#         - containerPort: 7422
#           name: leafnodes
#           hostPort: 7422
#         - containerPort: 6222
#           name: cluster
#         - containerPort: 8222
#           name: monitor
#         - containerPort: 7777
#           name: metrics
#         command:
#          - "nats-server"
#          - "--config"
#          - "/etc/nats-config/nats.conf"

#         # Required to be able to define an environment variable
#         # that refers to other environment variables.  This env var
#         # is later used as part of the configuration file.
#         env:
#         - name: POD_NAME
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.name
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         - name: CLUSTER_ADVERTISE
#           value: $(POD_NAME).nats.$(POD_NAMESPACE).svc
#         volumeMounts:
#           - name: config-volume
#             mountPath: /etc/nats-config
#           - name: pid
#             mountPath: /var/run/nats

#         # Liveness/Readiness probes against the monitoring
#         #
#         livenessProbe:
#           httpGet:
#             path: /
#             port: 8222
#           initialDelaySeconds: 10
#           timeoutSeconds: 5
#         readinessProbe:
#           httpGet:
#             path: /
#             port: 8222
#           initialDelaySeconds: 10
#           timeoutSeconds: 5

#         # Gracefully stop NATS Server on pod deletion or image upgrade.
#         #
#         lifecycle:
#           preStop:
#             exec:
#               # Using the alpine based NATS image, we add an extra sleep that is
#               # the same amount as the terminationGracePeriodSeconds to allow
#               # the NATS Server to gracefully terminate the client connections.
#               #
#               command: ["/bin/sh", "-c", "/nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60"]

# {{end}} # End of "microservices" condition
