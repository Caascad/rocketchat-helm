#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# ROCKET.CHAT TECHNOLOGY CORP. - Microservices K8s Manifests          #
# Diego Sampaio - Created (circa August 2021) / Priv. Repo            #
# Pedro T. R. Pinheiro - Adapted for Helm templ. system (Jan/2021)    #
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

{{- if .Values.microservices.enabled }}
{{- $service := .Values.service -}}
# # # # # # # # # # # # #
# Account µService      #
# # # # # # # # # # # # #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-accounts
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.microservices.accounts.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-accounts
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-accounts
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: account-service
        image: registry.rocket.chat/rocketchat/account-service:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://{{ .Release.Name }}-nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "rocketchat.name" . }}-accounts
  annotations:
    {{- if .Values.prometheusScraping.enabled }}
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.prometheusScraping.port }}"
    {{- end }}
{{- with $service.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
  ports:
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
      app.kubernetes.io/name: {{ .Release.Name }}-accounts
      app.kubernetes.io/instance: {{ .Release.Name }}

# # # # # # # # # # # # # #
# Authorization µService  #
# # # # # # # # # # # # # #

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-authorization
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.microservices.authorization.replicas }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-authorization
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-authorization
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: authorization-service
        image: registry.rocket.chat/rocketchat/authorization-service:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://{{ .Release.Name }}-nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-authorization
  annotations:
    {{- if .Values.prometheusScraping.enabled }}
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.prometheusScraping.port }}"
    {{- end }}
{{- with $service.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
  ports:
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-authorization
    app.kubernetes.io/instance: {{ .Release.Name }}

# # # # # # # # # # # # #
# DDP Streamer µService #
# # # # # # # # # # # # #

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ddp-streamer
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.microservices.ddpStreamer.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-ddp-streamer
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-ddp-streamer
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: ddp-streamer
        image: registry.rocket.chat/rocketchat/ddp-streamer-service:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://{{ .Release.Name }}-nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: PORT
          value: '3000'
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: ddp-streamer
  annotations:
    #TODO: make that as Ingress-agnostic as possible
    traefik.backend.circuitbreaker: NetworkErrorRatio() > 0.5
    traefik.backend.loadbalancer.method: drr
    traefik.ingress.kubernetes.io/affinity: "true"
    {{- if .Values.prometheusScraping.enabled }}
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.prometheusScraping.port }}"
    {{- end }}
{{- with $service.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http
    targetPort: 3000
    port: 3000
    protocol: TCP
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-ddp-streamer
    app.kubernetes.io/instance: {{ .Release.Name }}


# # # # # # # # # # # # #
# NATS Stateful Set     #
# # # # # # # # # # # # #
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
data:
  nats.conf: |
    pid_file: "/var/run/nats/nats.pid"
    http: 8222
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nats
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    prometheus.io/path: '/metrics'
    prometheus.io/scrape: 'true'
    prometheus.io/port: '7777'
spec:
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-nats
    app.kubernetes.io/instance: {{ .Release.Name }}
  clusterIP: None
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 7777
  - name: leafnodes
    port: 7422
  - name: gateways
    port: 7522
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-nats
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    prometheus.io/path: '/metrics'
    prometheus.io/scrape: 'true'
    prometheus.io/port: '7777'
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-nats
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.microservices.nats.replicas }}
  serviceName: "nats"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-nats
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      # Common volumes for the containers
      volumes:
      - name: config-volume
        configMap:
          name: nats-config
      - name: pid
        emptyDir: {}

      # Required to be able to HUP signal and apply config reload
      # to the server without restarting the pod.
      shareProcessNamespace: true

      #################
      #               #
      #  NATS Server  #
      #               #
      #################
      terminationGracePeriodSeconds: 60
      containers:
      - name: nats-exporter
        image: natsio/prometheus-nats-exporter:0.9.1
        ports:
        - containerPort: 7777
          name: metrics
        args:
        - -connz
        - -routez
        - -subz
        - -varz
        - -use_internal_server_id
        - http://localhost:8222/
      - name: nats
        image: nats:2.4.0-alpine
        ports:
        - containerPort: 4222
          name: client
          hostPort: 4222
        - containerPort: 7422
          name: leafnodes
          hostPort: 7422
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        - containerPort: 7777
          name: metrics
        command:
         - "nats-server"
         - "--config"
         - "/etc/nats-config/nats.conf"

        # Required to be able to define an environment variable
        # that refers to other environment variables.  This env var
        # is later used as part of the configuration file.
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).nats.$(POD_NAMESPACE).svc
        volumeMounts:
          - name: config-volume
            mountPath: /etc/nats-config
          - name: pid
            mountPath: /var/run/nats

        # Liveness/Readiness probes against the monitoring
        #
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5

        # Gracefully stop NATS Server on pod deletion or image upgrade.
        #
        lifecycle:
          preStop:
            exec:
              # Using the alpine based NATS image, we add an extra sleep that is
              # the same amount as the terminationGracePeriodSeconds to allow
              # the NATS Server to gracefully terminate the client connections.
              #
              command: ["/bin/sh", "-c", "/nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60"]

# # # # # # # # # # # # #
# Presence µService     #
# # # # # # # # # # # # #

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-presence
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.microservices.presence.replicas }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-presence
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-presence
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: presence-service
        image: registry.rocket.chat/rocketchat/presence-service:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://{{ .Release.Name }}-nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-presence
  annotations:
    {{- if .Values.prometheusScraping.enabled }}
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.prometheusScraping.port }}"
    {{- end }}
{{- with $service.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
  ports:
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-presence
    app.kubernetes.io/instance: {{ .Release.Name }}

# # # # # # # # # # # # #
# Stream Hub µService   #
# # # # # # # # # # # # #
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-stream-hub
  labels:
    app.kubernetes.io/name: {{ include "rocketchat.name" . }}
    helm.sh/chart: {{ include "rocketchat.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.microservices.streamHub.replicas }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-stream-hub
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-stream-hub
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: stream-hub
        image: registry.rocket.chat/rocketchat/stream-hub-service:{{ if .Values.image.tag }}{{ .Values.image.tag }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
        env:
        {{- if .Values.existingMongodbSecret }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.existingMongodbSecret }}
              key: mongo-oplog-uri
        {{- else }}
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-uri
        - name: MONGO_OPLOG_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "rocketchat.fullname" . }}
              key: mongo-oplog-uri
        {{- end }}
        - name: TRANSPORTER
          value: nats://{{ .Release.Name }}-nats:4222
        - name: MOLECULER_LOG_LEVEL
          value: info
        - name: HEARTBEAT_INTERVAL
          value: '10'
        - name: HEARTBEAT_TIMEOUT
          value: '30'
        - name: RETRY_ENABLED
          value: 'yes'
        - name: MS_METRICS
          value: 'true'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-stream-hub
  annotations:
    {{- if .Values.prometheusScraping.enabled }}
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.prometheusScraping.port }}"
    {{- end }}
{{- with $service.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  type: ClusterIP
  ports:
  - name: metrics
    targetPort: 9458
    port: 9458
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}-stream-hub
    app.kubernetes.io/instance: {{ .Release.Name }}
{{end}} # End of "microservices" condition
